<Activity mc:Ignorable="sap sap2010" x:Class="GenerateRequiredLogs" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="externalConfig" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="emptyQueue" Type="InArgument(x:Boolean)" />
    <x:Property Name="finalDestinationOfProcessedReport" Type="OutArgument(x:String)" />
    <x:Property Name="numberOfItems" Type="OutArgument(x:Int32)" />
    <x:Property Name="csvFileToDownload" Type="InArgument(x:String)" />
  </x:Members>
  <this:GenerateRequiredLogs.emptyQueue>
    <InArgument x:TypeArguments="x:Boolean" />
  </this:GenerateRequiredLogs.emptyQueue>
  <this:GenerateRequiredLogs.csvFileToDownload>
    <InArgument x:TypeArguments="x:String" />
  </this:GenerateRequiredLogs.csvFileToDownload>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1006,722</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GenerateRequiredLogs_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="66">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GenerateRequiredLogs" sap:VirtualizedContainerService.HintSize="496,657" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="errorMessage" />
      <Variable x:TypeArguments="x:Double" Name="OverheadAmount" />
      <Variable x:TypeArguments="x:Double" Name="OverheadThreshold" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadCsvFile DataTable="[dt]" Delimitator="Comma" DisplayName="Read CSV" FilePath="[csvFileToDownload]" sap:VirtualizedContainerService.HintSize="434,154" sap2010:WorkflowViewState.IdRef="ReadCsvFile_1" />
    <If Condition="[dt IsNot nothing AndAlso dt.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="434,352" sap2010:WorkflowViewState.IdRef="If_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_9">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="572,147" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Double">[OverheadAmount]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Double">[CDbl(externalConfig("OverheadAmount").ToString)]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Double">[OverheadThreshold]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Double">[CDbl(externalConfig("OverheadThreshold"))]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
          <ui:MultipleAssign DisplayName="Auto Get Request" sap:VirtualizedContainerService.HintSize="572,302" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dt.Columns("invh_InvoiceNumber").ColumnName]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">invoiceid</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dt.Columns("pay_Name").ColumnName]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">payername</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dt.Columns("Textbox8").ColumnName]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">clientname</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dt.Columns("br_Name").ColumnName]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">officename</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dt.Columns("invh_InvoiceDate1").ColumnName]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">datevalue</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[dt.Columns("Textbox63").ColumnName]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">subbalance</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_41">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[finalDestinationOfProcessedReport]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Path.Combine(in_Config("DumpsFolderPath").ToString(),"OverHeadsToAdjust"+Now.ToString("ddMMMyyyy_HHmmss")+".csv")]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="572,184" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <ui:MultipleAssign DisplayName="Auto Get Request" sap:VirtualizedContainerService.HintSize="479,178" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_42">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="sd:DataTable">[dt]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="sd:DataTable">[dt.AsEnumerable.Where(Function(x) Double.TryParse(x("subbalance").ToString.Trim.Replace("$",String.Empty).Replace(" ",String.Empty).Replace(")",String.Empty).Replace("(","-"),Nothing)).CopyToDataTable()]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_43">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="sd:DataTable">[dt]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="sd:DataTable">[dt.AsEnumerable.Where(Function(x) CDbl(x("subbalance").ToString.Trim.Replace("$",String.Empty).Replace(" ",String.Empty).Replace(")",String.Empty).Replace("(","-")) &lt; 0).CopyToDataTable()]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_44">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="sd:DataTable">[dt]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="sd:DataTable">[dt.AsEnumerable.Where(Function(x) Math.Abs(CDbl(x("subbalance").ToString.Replace("(","-").Replace(")",String.Empty).Replace("$",String.Empty))) &gt;= OverheadAmount AndAlso Math.Abs(CDbl(x("subbalance").ToString.Replace("(","-").Replace(")",String.Empty).Replace("$",String.Empty))) &lt;= (OverheadAmount+OverheadThreshold)).CopyToDataTable()]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
              </ui:MultipleAssign>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Throw Exception="[New BusinessRuleException(&quot;No more items divisible by $34.50 &quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_5" />
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <ui:FilterDataTable sap2010:Annotation.AnnotationText="Filter table to retian only required logs" DataTable="[dt]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="572,192" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dt]" SelectColumnsMode="Keep">
            <ui:FilterDataTable.Filters>
              <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                  <ui:FilterOperationArgument.Column>
                    <InArgument x:TypeArguments="x:String">["payername"]</InArgument>
                  </ui:FilterOperationArgument.Column>
                  <ui:FilterOperationArgument.Operand>
                    <InArgument x:TypeArguments="x:String">["PA Indiana Medicaid"]</InArgument>
                  </ui:FilterOperationArgument.Operand>
                </ui:FilterOperationArgument>
              </scg:List>
            </ui:FilterDataTable.Filters>
            <ui:FilterDataTable.SelectColumns>
              <scg:List x:TypeArguments="InArgument" Capacity="8">
                <InArgument x:TypeArguments="x:String">["invoiceid"]</InArgument>
                <InArgument x:TypeArguments="x:String">["datevalue"]</InArgument>
                <InArgument x:TypeArguments="x:String">["payername"]</InArgument>
                <InArgument x:TypeArguments="x:String">["clientname"]</InArgument>
                <InArgument x:TypeArguments="x:String">["officename"]</InArgument>
                <InArgument x:TypeArguments="x:String">["subbalance"]</InArgument>
              </scg:List>
            </ui:FilterDataTable.SelectColumns>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:FilterDataTable>
          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Try&#xA;If dt IsNot Nothing AndAlso dt.Rows.Count &gt; 0 Then&#xA;'preserve only unique ref id&#xA;Console.WriteLine(dt.Rows.Count.ToString+&quot; items to clear&quot;)&#xA;dt = dt.AsEnumerable().GroupBy(Function(row) row.Field(Of String)(&quot;officename&quot;)+row.Field(Of String)(&quot;invoiceid&quot;)).Select(Function(x) x.First()).CopyToDataTable()&#xA;Console.WriteLine(dt.Rows.Count.ToString+&quot; are unique invoice ids&quot;)&#xA;Dim offices As String() = dt.AsEnumerable().Select(Function (a) a.Field(Of String)(&quot;officename&quot;).ToString).Distinct().ToArray()&#xA;If File.Exists(ListOfOfficeFilePath) Then&#xA;&#x9;Console.WriteLine(&quot;Loading Existing office List&quot;)&#xA;&#x9;offices = offices.Concat(File.ReadAllLines(ListOfOfficeFilePath)).Distinct().ToArray()&#xA;&#x9;Console.WriteLine(&quot;Now updating new List of office&quot;)&#xA;End If&#xA;Console.WriteLine(&quot;Creating New List of offices&quot;)&#xA;File.WriteAllLines(ListOfOfficeFilePath,offices)&#xA;'add refernce column&#xA;dt.Columns.Add(&quot;Reference&quot;,GetType(String)).SetOrdinal(0)&#xA;dt.Columns.Add(&quot;subbalance_n&quot;,GetType(Double))&#xA;For Each row As DataRow In dt.Rows&#xA;&#x9;row(&quot;subbalance_n&quot;) = CDbl(row(&quot;subbalance&quot;).ToString.Replace(&quot;(&quot;,&quot;-&quot;).Replace(&quot;)&quot;,String.Empty).Replace(&quot;$&quot;,String.Empty))&#xA;&#x9;row(&quot;Reference&quot;) = row(&quot;officename&quot;).ToString()+&quot;_&quot;+row(&quot;invoiceid&quot;).ToString()&#xA;Next&#xA;&#xA;dt.Columns.Remove(&quot;subbalance&quot;)&#xA;dt.Columns(&quot;subbalance_n&quot;).ColumnName = &quot;subbalance&quot;&#xA;Else&#xA;&#x9;Throw New SystemException(&quot;The generated or inputted file has no valid data. please confirm file in incoming  was not blank.&quot;)&#xA;End If&#xA;Catch ex As Exception&#xA;&#x9;Console.WriteLine(ex.Message)&#xA;&#x9;errorMessage = ex.Message&#xA;End Try" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="572,165" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
            <ui:InvokeCode.Arguments>
              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="dt">[dt]</InOutArgument>
              <InOutArgument x:TypeArguments="x:String" x:Key="errorMessage">[errorMessage]</InOutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="ListOfOfficeFilePath">[in_Config("ListOfOfficeFilePath").ToString()]</InArgument>
            </ui:InvokeCode.Arguments>
          </ui:InvokeCode>
          <If sap2010:Annotation.AnnotationText="Load queue here" Condition="[String.IsNullOrEmpty(errorMessage)]" sap:VirtualizedContainerService.HintSize="572,1652" sap2010:WorkflowViewState.IdRef="If_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="538,1439" sap2010:WorkflowViewState.IdRef="Sequence_13">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence sap2010:Annotation.AnnotationText="Sets of actions to be perfromed to load data into queue" DisplayName="Load Queu e Action" sap:VirtualizedContainerService.HintSize="496,1351" sap2010:WorkflowViewState.IdRef="Sequence_10">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="qItems" />
                    <Variable x:TypeArguments="x:Int32" Name="counter" />
                    <Variable x:TypeArguments="x:Int32" Default="10000" Name="chunkSize" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:IfElseIf sap2010:Annotation.AnnotationText="Empty queue bed on request from suppourt" DisplayName="Else If" sap:VirtualizedContainerService.HintSize="434,94" sap2010:WorkflowViewState.IdRef="IfElseIf_3">
                    <ui:IfElseIf.ConditionBlocks>
                      <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                        <ui:IfElseIfBlock BlockType="If" Condition="[emptyQueue]">
                          <ui:IfElseIfBlock.Then>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="450,437" sap2010:WorkflowViewState.IdRef="Sequence_11">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetQueueItems Priority="{x:Null}" DisplayName="Get Queue Items" FilterStrategy="Equals" FolderPath="[in_Config(&quot;OrchestratorQueueFolder&quot;).ToString()]" sap:VirtualizedContainerService.HintSize="388,143" sap2010:WorkflowViewState.IdRef="GetQueueItems_2" QueueItemStates="New, InProgress, Failed, Successful, Abandoned, Retried, Deleted" QueueName="[in_Config(&quot;OrchestratorQueueName&quot;).ToString()]" Result="[qItems]">
                                <ui:GetQueueItems.Duration>
                                  <InArgument x:TypeArguments="s:Nullable(x:Int32)" />
                                </ui:GetQueueItems.Duration>
                                <ui:GetQueueItems.From>
                                  <InArgument x:TypeArguments="s:Nullable(s:DateTime)" />
                                </ui:GetQueueItems.From>
                                <ui:GetQueueItems.Reference>
                                  <InArgument x:TypeArguments="x:String" />
                                </ui:GetQueueItems.Reference>
                                <ui:GetQueueItems.Skip>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:GetQueueItems.Skip>
                                <ui:GetQueueItems.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:GetQueueItems.TimeoutMS>
                                <ui:GetQueueItems.To>
                                  <InArgument x:TypeArguments="s:Nullable(s:DateTime)" />
                                </ui:GetQueueItems.To>
                                <ui:GetQueueItems.Top>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:GetQueueItems.Top>
                              </ui:GetQueueItems>
                              <ui:DeleteQueueItems DisplayName="Delete Queue Items" FolderPath="[in_Config(&quot;OrchestratorQueueFolder&quot;).ToString()]" sap:VirtualizedContainerService.HintSize="388,143" sap2010:WorkflowViewState.IdRef="DeleteQueueItems_2" QueueItems="[qItems]">
                                <ui:DeleteQueueItems.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:DeleteQueueItems.TimeoutMS>
                              </ui:DeleteQueueItems>
                            </Sequence>
                          </ui:IfElseIfBlock.Then>
                        </ui:IfElseIfBlock>
                      </sc:BindingList>
                    </ui:IfElseIf.ConditionBlocks>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:IfElseIf>
                  <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">0</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Now loading queue..&quot;]" />
                  <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[numberOfItems]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[dt.Rows.Count]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InterruptibleWhile CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Bulk load queue Item every 1000's" Condition="[dt.Rows.Count &gt; counter]" DisplayName="While" sap:VirtualizedContainerService.HintSize="434,94" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_2">
                    <ui:InterruptibleWhile.Body>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,404" sap2010:WorkflowViewState.IdRef="Sequence_12">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:BulkAddQueueItems CommitType="ProcessAllIndependently" DisplayName="Bulk Add Queue Items" FolderPath="[in_Config(&quot;OrchestratorQueueFolder&quot;).ToString()]" sap:VirtualizedContainerService.HintSize="434,194" sap2010:WorkflowViewState.IdRef="BulkAddQueueItems_2" QueueItemsDataTable="[dt.AsEnumerable().Skip(counter).Take(chunkSize).CopyToDataTable()]" QueueName="[in_Config(&quot;OrchestratorQueueName&quot;).ToString()]">
                          <ui:BulkAddQueueItems.Result>
                            <OutArgument x:TypeArguments="sd:DataTable" />
                          </ui:BulkAddQueueItems.Result>
                          <ui:BulkAddQueueItems.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:BulkAddQueueItems.TimeoutMS>
                        </ui:BulkAddQueueItems>
                        <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_4">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[counter + chunkSize]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ui:InterruptibleWhile.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InterruptibleWhile>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Successfully loaded queue&quot;]" />
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Updating input file data&quot;]" />
                  <ui:WriteCsvFile AddHeaders="True" DataTable="[dt]" Delimitator="Comma" DisplayName="Write CSV" FilePath="[finalDestinationOfProcessedReport]" sap:VirtualizedContainerService.HintSize="434,154" sap2010:WorkflowViewState.IdRef="WriteCsvFile_2" ShouldQuote="True" />
                </Sequence>
              </Sequence>
            </If.Then>
            <If.Else>
              <Throw Exception="[New SystemException(errorMessage)]" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="Throw_4" />
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Throw Exception="[New BusinessRuleException(&quot;the exported csv has no rows &quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_3" />
      </If.Else>
    </If>
  </Sequence>
</Activity>