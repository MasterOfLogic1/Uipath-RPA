<Activity mc:Ignorable="sap sap2010" x:Class="NavigateToAdmissions" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="waitTime" Type="InArgument(x:Int32)" />
    <x:Property Name="scrapedInvoicesFilePath" Type="InArgument(x:String)" />
    <x:Property Name="externalConfig" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="officeName" Type="InArgument(x:String)" />
    <x:Property Name="DateValue" Type="InArgument(x:String)" />
    <x:Property Name="InvoiceId" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>736.8,1928</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>NavigateToAdmissions_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="88">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Platform.Triggers</x:String>
      <x:String>UiPath.Platform.Triggers.Scope</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="116">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="NavigateToAdmissions" sap:VirtualizedContainerService.HintSize="747.2,1863.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Default="[New System.Data.DataTable]" Name="dtPostings" />
      <Variable x:TypeArguments="x:Boolean" Name="postSuccessful" />
      <Variable x:TypeArguments="s:DateTime" Name="realDate" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="changeLog" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'soneto.exe  MatrixCare'" sap:VirtualizedContainerService.HintSize="684.8,1751.2" sap2010:WorkflowViewState.IdRef="WindowScope_1" InformativeScreenshot="41e22e63362d03ddf4e6d7919a57b646" Selector="&lt;wnd app='*soneto*.exe' ctrlname='*frmMain*' /&gt;&lt;wnd ctrlname='*frmSearchInvoices*' /&gt;">
      <ui:WindowScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence sap:VirtualizedContainerService.HintSize="651.2,1604" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="588.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Now searching for postings with negative balance  related to invoice number  &quot;+  InvoiceId]" />
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="588.8,1359.2" sap2010:WorkflowViewState.IdRef="Sequence_10">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Boolean" Name="foundResult" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CheckAppConnection.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="526.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Project\CheckAppConnection.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Project\RPAForMatrixApp\ReAuthenticateMatrixApp.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="526.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Project\RPAForMatrixApp\ReAuthenticateMatrixApp.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:Int32" x:Key="waitTime">[waitTime]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_config">[config]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:TimeoutScope TimeoutMessage="{x:Null}" sap2010:Annotation.AnnotationText="We are wrapping these set of actions in a time out scope because if they should take too long then it means the application has timed out." DisplayName="Timeout Scope" sap:VirtualizedContainerService.HintSize="526.4,144.8" sap2010:WorkflowViewState.IdRef="TimeoutScope_2" ThrowExceptionAfter="[TimeSpan.FromMilliseconds(CInt(config(&quot;MatrixNetworkErrorTimeOut&quot;)))]">
                <ui:TimeoutScope.Body>
                  <ActivityAction x:TypeArguments="Activity">
                    <Sequence sap2010:Annotation.AnnotationText="Search to return only given invoice : This is done to avoid errors" sap:VirtualizedContainerService.HintSize="449.6,691.2" sap2010:WorkflowViewState.IdRef="Sequence_16">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="387.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Typing in invoice Id &quot;+ invoiceId]" />
                      <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" AlterIfDisabled="True" ClickBeforeTyping="True" DisplayName="Enter Invoice Id" EmptyField="True" sap:VirtualizedContainerService.HintSize="387.2,135.2" sap2010:WorkflowViewState.IdRef="TypeInto_1" SimulateType="False" Text="[InvoiceId]">
                        <ui:TypeInto.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="4a61e42b-3a2d-44a2-987b-1d9b88658e94" InformativeScreenshot="09818b00f53ce0dc83629513661c30ee" Selector="&lt;wnd ctrlname='BaseDetailsForm_Fill_Panel' /&gt;&lt;wnd ctrlname='tabMain' /&gt;&lt;wnd ctrlname='tabpMain' /&gt;&lt;wnd ctrlname='Panel1' /&gt;&lt;wnd ctrlname='UltraGroupBox1' /&gt;&lt;wnd ctrlname='txtInvoiceNumber' /&gt;" TimeoutMS="[waitTime]" WaitForReady="NONE" />
                        </ui:TypeInto.Target>
                      </ui:TypeInto>
                      <ui:Click DelayBefore="{x:Null}" SendWindowMessages="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DelayMS="5000" DisplayName="Click 'WindowsForms10.Window.8...'" sap:VirtualizedContainerService.HintSize="387.2,107.2" sap2010:WorkflowViewState.IdRef="Click_11" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                        <ui:Click.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:Click.CursorPosition>
                        <ui:Click.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a3357792-0ecd-4588-a779-710e585d7174" InformativeScreenshot="f699cae4bd629bbd70e70632e074893a" Selector="&lt;wnd ctrlname='*btnSearch*' /&gt;" TimeoutMS="[waitTime]" WaitForReady="NONE" />
                        </ui:Click.Target>
                      </ui:Click>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="387.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Clicked search&quot;]" />
                    </Sequence>
                  </ActivityAction>
                </ui:TimeoutScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:TimeoutScope>
              <ui:UiElementExists DisplayName="Element Exists 'cell  Invoice Num'" Exists="[foundResult]" sap:VirtualizedContainerService.HintSize="526.4,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                <ui:UiElementExists.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="37407f4a-5317-4af4-8013-a4ae6f9ad4b7" InformativeScreenshot="ef5b0d02d38ef358c3ee550034540ebf" Selector="[string.Format(&quot;&lt;wnd ctrlname='BaseDetailsForm_Fill_Panel' /&gt;&lt;wnd ctrlname='tabMain' /&gt;&lt;wnd ctrlname='tabpMain' /&gt;&lt;wnd ctrlname='PaymentPosting1' /&gt;&lt;wnd ctrlname='pnlMain' /&gt;&lt;wnd ctrlname='spContainer' /&gt;&lt;wnd ctrlname='spInvoicePaymentPostings' /&gt;&lt;wnd ctrlname='grdData' /&gt;&lt;ctrl name='PostingInvoiceHeaderInfoCollection' role='table' /&gt;&lt;ctrl name='Invoice Header Posting row 1' role='row' /&gt;&lt;ctrl name='Invoice Num' role='cell' text='*{0}*' /&gt;&quot;, invoiceId)]">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:UiElementExists.Target>
              </ui:UiElementExists>
              <If Condition="[foundResult]" sap:VirtualizedContainerService.HintSize="526.4,608" sap2010:WorkflowViewState.IdRef="If_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="588.8,1392.8" sap2010:WorkflowViewState.IdRef="Sequence_17">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="545.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Opening posting table&quot;]" />
                    <ui:TimeoutScope TimeoutMessage="{x:Null}" DisplayName="Timeout Scope" sap:VirtualizedContainerService.HintSize="545.6,52.8" sap2010:WorkflowViewState.IdRef="TimeoutScope_1" ThrowExceptionAfter="[TimeSpan.FromMilliseconds(CInt(config(&quot;GeneralTimeOutScope&quot;)))]">
                      <ui:TimeoutScope.Body>
                        <ActivityAction x:TypeArguments="Activity">
                          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click to open mini table" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                            <ui:Click.CursorPosition>
                              <ui:CursorPosition Position="Center">
                                <ui:CursorPosition.OffsetX>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetX>
                                <ui:CursorPosition.OffsetY>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetY>
                              </ui:CursorPosition>
                            </ui:Click.CursorPosition>
                            <ui:Click.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="bffb5ebe-54d3-4041-b3b5-78c656dae533" InformativeScreenshot="c1bc72762ec0e21c5f4031ad10f47834" Selector="&lt;wnd ctrlname='BaseDetailsForm_Fill_Panel' /&gt;&lt;wnd ctrlname='tabMain' /&gt;&lt;wnd ctrlname='tabpMain' /&gt;&lt;wnd ctrlname='PaymentPosting1' /&gt;&lt;wnd ctrlname='pnlMain' /&gt;&lt;wnd ctrlname='spContainer' /&gt;&lt;wnd ctrlname='spInvoicePaymentPostings' /&gt;&lt;wnd ctrlname='grdData' /&gt;&lt;ctrl name='PostingInvoiceHeaderInfoCollection' role='table' /&gt;&lt;ctrl name='Invoice Header Posting row 1' role='row' /&gt;" TimeoutMS="[waitTime]">
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:Click.Target>
                          </ui:Click>
                        </ActivityAction>
                      </ui:TimeoutScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:TimeoutScope>
                    <Sequence sap2010:Annotation.AnnotationText="Scrape posting data" DisplayName="Data Scraping" sap:VirtualizedContainerService.HintSize="545.6,764" sap2010:WorkflowViewState.IdRef="Sequence_14">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="483.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_1">
                        <Assign.To>
                          <OutArgument x:TypeArguments="sd:DataTable">[dtPostings]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="sd:DataTable">[New System.Data.DataTable]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="483.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Scarpping posting table&quot;]" />
                      <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'FrmMain Soneto'" sap:VirtualizedContainerService.HintSize="483.2,366.4" sap2010:WorkflowViewState.IdRef="WindowScope_2" InformativeScreenshot="c57d14cbe92fb41dff906554449c3e89" Selector="&lt;wnd app='soneto.exe' ctrlname='frmMain' /&gt;">
                        <ui:WindowScope.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="449.6,219.2" sap2010:WorkflowViewState.IdRef="Sequence_13">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExtractData DelayBetweenPagesMS="{x:Null}" NextLinkSelector="{x:Null}" ContinueOnError="True" DataTable="[dtPostings]" DisplayName="Extract Structured Data 'table  PostingInvoiceDe...'" ExtractMetadata="&lt;extract-table get_columns_name='1' get_empty_columns='1' columns_name_source='Longest' /&gt;" sap:VirtualizedContainerService.HintSize="387.2,107.2" sap2010:WorkflowViewState.IdRef="ExtractData_1" MaxNumberOfResults="[CInt(config(&quot;MaxNumberOfRowsToScrape&quot;))]" SimulateClick="True">
                                <ui:ExtractData.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="6a0128ef-0efd-4c5c-afbf-e6efdd230a22" InformativeScreenshot="ba8005e25beb4ddc1ece1662442c55e0" Selector="&lt;wnd ctrlname='frmSearchInvoices' /&gt;&lt;wnd ctrlname='BaseDetailsForm_Fill_Panel' /&gt;&lt;wnd ctrlname='tabMain' /&gt;&lt;wnd ctrlname='tabpMain' /&gt;&lt;wnd ctrlname='PaymentPosting1' /&gt;&lt;wnd ctrlname='pnlMain' /&gt;&lt;wnd ctrlname='spContainer' /&gt;&lt;wnd ctrlname='spInvoicePaymentPostings' /&gt;&lt;wnd ctrlname='grdData' /&gt;&lt;ctrl name='PostingInvoiceHeaderInfoCollection' role='table' /&gt;&lt;ctrl name='Invoice Header Posting row 1' role='row' /&gt;&lt;ctrl name='PostingInvoiceDetails' role='table' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:ExtractData.Target>
                              </ui:ExtractData>
                            </Sequence>
                          </ActivityAction>
                        </ui:WindowScope.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:WindowScope>
                    </Sequence>
                    <If Condition="[dtPostings IsNot  Nothing AndAlso dtPostings.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="545.6,273.6" sap2010:WorkflowViewState.IdRef="If_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="476.8,1396" sap2010:WorkflowViewState.IdRef="Sequence_15">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Add index column" Code="Try&#xA;If dtPostings IsNot Nothing AndAlso dtPostings.Rows.Count &gt; 0 Then&#xA;Console.WriteLine(dtPostings.Rows.Count.ToString+&quot; items found in posting table...&quot;)&#xA;dtPostings.Columns.Add(&quot;sn&quot;,GetType(Object)).SetOrdinal(0)&#xA;For Each row As DataRow In dtPostings.Rows&#xA;&#x9;row(&quot;sn&quot;) = dtPostings.Rows.IndexOf(row)+1&#xA;Next&#xA;Console.WriteLine(&quot;added serial number to posting table&quot;)&#xA;End If&#xA;Catch&#xA;&#x9;&#xA;End Try" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="433.6,196" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
                            <ui:InvokeCode.Arguments>
                              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="dtPostings">[dtPostings]</InOutArgument>
                            </ui:InvokeCode.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeCode>
                          <ui:FilterDataTable sap2010:Annotation.AnnotationText="Keep only rows with negative balnace and relevant headers" DataTable="[dtPostings]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="433.6,193.6" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[dtPostings]" SelectColumnsMode="Keep">
                            <ui:FilterDataTable.Filters>
                              <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="CONTAINS" />
                              </scg:List>
                            </ui:FilterDataTable.Filters>
                            <ui:FilterDataTable.SelectColumns>
                              <scg:List x:TypeArguments="InArgument" Capacity="4">
                                <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                <InArgument x:TypeArguments="x:Int32">[25]</InArgument>
                              </scg:List>
                            </ui:FilterDataTable.SelectColumns>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:FilterDataTable>
                          <ui:MultipleAssign sap2010:Annotation.AnnotationText="Properly name columns" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="433.6,195.2" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                            <ui:MultipleAssign.AssignOperations>
                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[dtPostings.Columns(0).ColumnName]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">sn</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[dtPostings.Columns(1).ColumnName]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">balanceid</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:String">[dtPostings.Columns(2).ColumnName]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:String">postingbalance</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg:List>
                            </ui:MultipleAssign.AssignOperations>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:MultipleAssign>
                          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_3">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:DateTime">[realDate]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:DateTime">[Date.ParseExact(DateValue,"M/d/yyyy",Nothing)]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="440,152" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_4">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:DateTime">[realDate]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:DateTime">[Date.ParseExact(DateValue,"M/d/yyyy hh:mm:ss",Nothing)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                          <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Remove roles not divisible by 34.50 and add balance date value which is last day of the month of invoice.&#xA;&#xA;&#xA;In this new updated I have implement a changeLog dictionary to keep track of what was changed . if at the end of the runtime what is changed is not what is expected to be change the program throws an error and deos not save anything . This saves us from the risk of erroneously posting millions to a client  invoice.&#xA;&#xA;Change log is simply the row index against original posting balance before any change." Code="Try&#xA;If dtPostings IsNot Nothing AndAlso dtPostings.Rows.Count &gt; 0 Then&#xA;changeLog = New Dictionary(Of String,Object)&#xA;dtPostings.Columns.Add(&quot;invoiceid&quot;,GetType(Object))&#xA;dtPostings.Columns.Add(&quot;modulous&quot;,GetType(Double))&#xA;dtPostings.Columns.Add(&quot;postdate&quot;,GetType(Object))&#xA;Dim lastDayOfMonth As Integer = DateTime.DaysInMonth(invoiceDate.Year,invoiceDate.Month)&#xA;Dim lastDate As DateTime = New DateTime(invoiceDate.Year,invoiceDate.Month,lastDayOfMonth)&#xA;Console.WriteLine(&quot;invoice last date of month is &quot;+lastDate.ToString+&quot;.....&quot;)&#xA;For Each row As DataRow In dtPostings.Rows&#xA;&#x9;Dim postingBal As Double = CDbl(row(&quot;postingbalance&quot;).ToString.Replace(&quot;(&quot;,&quot;-&quot;).Replace(&quot;)&quot;,String.Empty).Replace(&quot;$&quot;,String.Empty))&#xA;&#x9;'update change log with was original found in the table&#xA;&#x9;changeLog(row(&quot;sn&quot;).ToString) = postingBal&#xA;&#x9;row(&quot;modulous&quot;) = postingBal Mod PostAmount&#xA;&#x9;row(&quot;postdate&quot;) = lastDate.ToString(&quot;MM/dd/yyyy&quot;)&#xA;&#x9;row(&quot;invoiceid&quot;) = invoiceid&#xA;Next&#xA;Console.WriteLine(&quot;filtering to keep balances that are  are &quot;+OverheadAmount.ToString())&#xA;'filter table&#xA;Try&#xA;'Keep only rows with negative balnace and relevant headers&#xA;dtPostings = dtPostings.AsEnumerable.Where(Function(x) CDbl(x(&quot;postingbalance&quot;).ToString.Replace(&quot;(&quot;,&quot;-&quot;).Replace(&quot;)&quot;,String.Empty).Replace(&quot;$&quot;,String.Empty)) &lt; 0).CopyToDataTable()&#xA;dtPostings = dtPostings.AsEnumerable.Where(Function(x) Math.Abs(CDbl(x(&quot;postingbalance&quot;).ToString.Replace(&quot;(&quot;,&quot;-&quot;).Replace(&quot;)&quot;,String.Empty).Replace(&quot;$&quot;,String.Empty))) &gt;= OverheadAmount AndAlso Math.Abs(CDbl(x(&quot;postingbalance&quot;).ToString.Replace(&quot;(&quot;,&quot;-&quot;).Replace(&quot;)&quot;,String.Empty).Replace(&quot;$&quot;,String.Empty))) &lt;= (OverheadAmount+OverheadThreshold)).CopyToDataTable()&#xA;'Filter to keep only rows that fail the modulus rule&#xA;'dtPostings = dtPostings.AsEnumerable.Where(Function(x) CDbl(x(&quot;modulous&quot;)) = 0).CopyToDataTable()&#xA;Catch &#xA;dtPostings = Nothing&#xA;End Try&#xA;End If &#xA;Catch ex As Exception&#xA;Console.WriteLine(ex.Message)&#xA;&#x9;&#xA;End Try" DisplayName="Modulous and Last day of month Operation" sap:VirtualizedContainerService.HintSize="433.6,384.8" sap2010:WorkflowViewState.IdRef="InvokeCode_3">
                            <ui:InvokeCode.Arguments>
                              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="dtPostings">[dtPostings]</InOutArgument>
                              <InArgument x:TypeArguments="s:DateTime" x:Key="invoiceDate">[realDate]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="invoiceid">[InvoiceId]</InArgument>
                              <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="changeLog">[changeLog]</OutArgument>
                              <InArgument x:TypeArguments="x:Double" x:Key="OverheadAmount">[CDbl(externalConfig("OverheadAmount").ToString)]</InArgument>
                              <InArgument x:TypeArguments="x:Double" x:Key="OverheadThreshold">[CDbl(externalConfig("OverheadThreshold"))]</InArgument>
                              <InArgument x:TypeArguments="x:Double" x:Key="PostAmount">[CDbl(externalConfig("PostAmount").ToString)]</InArgument>
                            </ui:InvokeCode.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeCode>
                          <If sap2010:Annotation.AnnotationText="Proceed to posting " Condition="[dtPostings IsNot Nothing AndAlso dtPostings.Rows.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="433.6,84" sap2010:WorkflowViewState.IdRef="If_5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap2010:Annotation.AnnotationText="Proceed to posting " sap:VirtualizedContainerService.HintSize="412.8,472.8" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="369.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[dtPostings.Rows.Count.ToString+&quot; posting(s) found for invoice with number &quot;+  invoiceId]" />
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CorrectOverHeadBalance" sap:VirtualizedContainerService.HintSize="369.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Project\CorrectOverHeadBalance.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="sd:DataTable" x:Key="dtPostings">[dtPostings]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="invoiceGridNumber">1</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="invoiceNumber">[InvoiceId]</InArgument>
                                    <InArgument x:TypeArguments="x:Int32" x:Key="waitTime">[waitTime]</InArgument>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="externalConfig">[externalConfig]</InArgument>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="config">[config]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="officeName">[officeName]</InArgument>
                                    <OutArgument x:TypeArguments="x:Boolean" x:Key="postSuccessful">[postSuccessful]</OutArgument>
                                    <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="changeLog">[changeLog]</InOutArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <If sap2010:Annotation.AnnotationText="If post was successful then update log" Condition="[postSuccessful]" sap:VirtualizedContainerService.HintSize="369.6,96.8" sap2010:WorkflowViewState.IdRef="If_6">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="376.8,182.4" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Successfull updated all invoice overheads for &quot;+  InvoiceId]" />
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="377.6,312.8" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Warn" Message="[&quot;Posting failed&quot;]" />
                                      <Throw Exception="[New SystemException(&quot;Posting failed&quot;)]" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="Throw_3" />
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Warn" Message="[&quot;Usual! &quot;+ invoiceId]" />
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Throw Exception="[New SystemException(&quot;unable to scrape Invoice postings for &quot;+ invoiceId)]" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="Throw_2" />
                      </If.Else>
                    </If>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="492.8,424.8" sap2010:WorkflowViewState.IdRef="Sequence_22">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence sap:VirtualizedContainerService.HintSize="449.6,335.2" sap2010:WorkflowViewState.IdRef="Sequence_23">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="387.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Warn" Message="[&quot;Invoice id &quot;+invoiceId+&quot; not found&quot;]" />
                      <Throw Exception="[New SystemException(&quot;Invoice id &quot;+invoiceId+&quot; not found&quot;)]" sap:VirtualizedContainerService.HintSize="387.2,90.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
                    </Sequence>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:WindowScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:WindowScope>
  </Sequence>
</Activity>