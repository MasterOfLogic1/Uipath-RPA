<Activity mc:Ignorable="sap sap2010" x:Class="DownloadFilesFromWinscp" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="serverUrl" Type="InArgument(x:String)" />
    <x:Property Name="serverPortNumber" Type="InArgument(x:Int32)" />
    <x:Property Name="serverUsername" Type="InArgument(x:String)" />
    <x:Property Name="serverPassword" Type="InArgument(ss:SecureString)" />
    <x:Property Name="sshHostKeyFingerPrint" Type="InArgument(x:String)" />
    <x:Property Name="folderToUpload" Type="InArgument(x:String)" />
  </x:Members>
  <this:DownloadFilesFromWinscp.serverUrl>
    <InArgument x:TypeArguments="x:String" />
  </this:DownloadFilesFromWinscp.serverUrl>
  <this:DownloadFilesFromWinscp.serverPassword>
    <InArgument x:TypeArguments="ss:SecureString" />
  </this:DownloadFilesFromWinscp.serverPassword>
  <this:DownloadFilesFromWinscp.sshHostKeyFingerPrint>
    <InArgument x:TypeArguments="x:String" />
  </this:DownloadFilesFromWinscp.sshHostKeyFingerPrint>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>766.4,650.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>DownloadFilesFromWinscp_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Given the required parameters to connect to gainwell sftp ,and wether its R824,R894,P891 gainwell files, this workflow downloads the respective file keeping note of certain exceptions which are file size must not be less than a minimum expected, file must not have more than one occurence and file must have been uploaded to the sftp portal during a weekend date . i.e saturday and sunday" DisplayName="DownloadFilesFromWinscp" sap:VirtualizedContainerService.HintSize="449.6,524.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="errorMessage" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Given the required parameters to connect to gainwell sftp ,and wether its R824,R894,P891 gainwell files, this workflow downloads the respective file keeping note of certain exceptions which are file size must not be less than a minimum expected, file must not have more than one occurence and file must have been uploaded to the sftp portal during a weekend date . i.e saturday and sunday" Code="Try&#xD;&#xA;    Console.WriteLine(&quot;Opening connection to SFTP server for uploading files...&quot;)&#xD;&#xA;    Console.WriteLine(&quot;Creating connection objects...&quot;)&#xD;&#xA;    ' Create Session&#xD;&#xA;    Dim sessionOptions As New WinSCP.SessionOptions&#xD;&#xA;    sessionOptions.Protocol = WinSCP.Protocol.Sftp&#xD;&#xA;    sessionOptions.HostName = serverUrl&#xD;&#xA;    sessionOptions.UserName = serverUserName&#xD;&#xA;    sessionOptions.SecurePassword = serverPassword&#xD;&#xA;    sessionOptions.PortNumber = serverPortNumber&#xD;&#xA;    sessionOptions.SshHostKeyFingerprint = sshHostKeyFingerprint&#xD;&#xA;    Console.WriteLine(&quot;Setting up connection session over SFTP&quot;)&#xD;&#xA;    ' Connect to the session&#xD;&#xA;    Dim session As New WinSCP.Session&#xD;&#xA;    session.Open(sessionOptions)&#xD;&#xA;    Console.WriteLine(&quot;Connection to SFTP server successful&quot;)&#xD;&#xA;    ' Set transfer mode to binary&#xD;&#xA;    Dim transferOptions As New WinSCP.TransferOptions&#xD;&#xA;    transferOptions.TransferMode = WinSCP.TransferMode.Binary&#xD;&#xA;     Dim remoteFilePath As String = remoteDirectoryPath '&amp; &quot;/&quot; &amp; Path.GetFileName(fileToUpload)&#xD;&#xA;&#x9;Console.WriteLine(&quot;Uploading file &quot; &amp; folderToUpload+&quot;*&quot; &amp; &quot; to remote server as &quot; &amp; remoteFilePath)&#xD;&#xA;  &#x9;' Upload the file&#xD;&#xA;&#x9;'fileToUpload = &quot;C:\RPA\CreateInvoice_WorkDirectory\Temps\Test*&quot;&#xD;&#xA;     Dim transferResult As WinSCP.TransferOperationResult '= session.PutFiles(folderToUpload+&quot;*&quot;, remoteFilePath, False, transferOptions)&#xD;&#xA;            ' Check if the upload was successful&#xD;&#xA;            If transferResult.IsSuccess Then&#xD;&#xA;                Console.WriteLine(&quot;Successfully uploaded file &quot; &amp; folderToUpload)&#xD;&#xA;            Else&#xD;&#xA;                Console.WriteLine(&quot;Upload failed for file &quot; &amp; folderToUpload)&#xD;&#xA;            End If&#xD;&#xA;    Console.WriteLine(&quot;Disconnecting from the SFTP server&quot;)&#xD;&#xA;    session.Close()&#xD;&#xA;Catch ex As Exception&#xD;&#xA;    errorMessage = ex.Message&#xD;&#xA;    Console.WriteLine(&quot;Error: &quot; &amp; errorMessage)&#xD;&#xA;End Try&#xD;&#xA;&#xD;&#xA;' Code by Peters&#xD;&#xA;' Happy Automation&#xD;&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="387.2,304.8" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="serverUrl">[serverUrl]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="serverUsername">[serverUsername]</InArgument>
        <InArgument x:TypeArguments="ss:SecureString" x:Key="serverPassword">[serverPassword]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="remoteDirectoryPath">/Distribution/HIPAA Transactions/</InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="serverPortNumber">[serverPortNumber]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="sshHostKeyFingerPrint">[sshHostKeyFingerPrint]</InArgument>
        <InOutArgument x:TypeArguments="x:String" x:Key="errorMessage">[errorMessage]</InOutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="folderToUpload">[folderToUpload]</InArgument>
      </ui:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeCode>
  </Sequence>
</Activity>