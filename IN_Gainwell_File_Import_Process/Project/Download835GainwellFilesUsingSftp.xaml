<Activity mc:Ignorable="sap sap2010" x:Class="DownloadFilesFromWinscp" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="DownloadDestinationFolder" Type="InArgument(x:String)" />
    <x:Property Name="TransactionItem" Type="InArgument(x:String)" />
    <x:Property Name="serverUrl" Type="InArgument(x:String)" />
    <x:Property Name="serverPortNumber" Type="InArgument(x:Int32)" />
    <x:Property Name="serverUsername" Type="InArgument(x:String)" />
    <x:Property Name="serverPassword" Type="InArgument(ss:SecureString)" />
    <x:Property Name="sshHostKeyFingerPrint" Type="InArgument(x:String)" />
    <x:Property Name="downloadJacket" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="SubmitterId" Type="InArgument(x:String)" />
    <x:Property Name="fileDelayDaysCount" Type="InArgument(x:Int32)" />
  </x:Members>
  <this:DownloadFilesFromWinscp.TransactionItem>
    <InArgument x:TypeArguments="x:String" />
  </this:DownloadFilesFromWinscp.TransactionItem>
  <this:DownloadFilesFromWinscp.serverUrl>
    <InArgument x:TypeArguments="x:String" />
  </this:DownloadFilesFromWinscp.serverUrl>
  <this:DownloadFilesFromWinscp.serverPassword>
    <InArgument x:TypeArguments="ss:SecureString" />
  </this:DownloadFilesFromWinscp.serverPassword>
  <this:DownloadFilesFromWinscp.sshHostKeyFingerPrint>
    <InArgument x:TypeArguments="x:String" />
  </this:DownloadFilesFromWinscp.sshHostKeyFingerPrint>
  <this:DownloadFilesFromWinscp.SubmitterId>
    <InArgument x:TypeArguments="x:String" />
  </this:DownloadFilesFromWinscp.SubmitterId>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>439.2,589.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>DownloadFilesFromWinscp_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Given the required parameters to connect to gainwell sftp ,and wether its R824,R894,P891 gainwell files, this workflow downloads the respective file keeping note of certain exceptions which are file size must not be less than a minimum expected, file must not have more than one occurence and file must have been uploaded to the sftp portal during a weekend date . i.e saturday and sunday" DisplayName="DownloadFilesFromWinscp" sap:VirtualizedContainerService.HintSize="449.6,524.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="errorMessage" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Given the required parameters to connect to gainwell sftp ,and wether its R824,R894,P891 gainwell files, this workflow downloads the respective file keeping note of certain exceptions which are file size must not be less than a minimum expected, file must not have more than one occurence and file must have been uploaded to the sftp portal during a weekend date . i.e saturday and sunday" Code="Try&#xD;&#xA;Dim Response As String = Nothing&#xD;&#xA;&#x9;Console.WriteLine(&quot;opening connection to sftp to download gainwell files...&quot;)&#xD;&#xA;&#x9;Console.WriteLine(&quot;Creating connection objects..&quot;)&#xD;&#xA;&#x9;'Create Session&#xD;&#xA;&#x9;Dim sessionOptions As New Winscp.SessionOptions&#xD;&#xA;        &#x9;&#x9;sessionOptions.Protocol = Winscp.Protocol.Sftp&#xD;&#xA;                sessionOptions.HostName = serverUrl&#xD;&#xA;                sessionOptions.UserName = serverUserName&#xD;&#xA;                sessionOptions.SecurePassword = serverPassword&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;sessionOptions.PortNumber = serverPortNumber&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;sessionOptions.SshHostKeyFingerprint = sshHostKeyFingerprint&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Console.WriteLine(&quot; setting up connection session over sftp&quot;)&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;' Connect to session&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;Dim session As New Winscp.Session&#xD;&#xA;             &#x9;&#x9;&#x9;session.Open(sessionOptions)&#xD;&#xA;&#x9;&#x9;Console.WriteLine(&quot;connection to ftp successfull&quot;)&#x9;&#xD;&#xA;&#x9;&#x9;&#x9; &#x9;'set transfer mode to binary&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Dim transferOptions As New Winscp.TransferOptions&#xD;&#xA;            &#x9;&#x9;&#x9;&#x9;&#x9;&#x9;transferOptions.TransferMode = Winscp.TransferMode.Binary&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Dim sessionFiles As IEnumerable(Of Winscp.RemoteFileInfo)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sessionFiles = Session.EnumerateRemoteFiles(remoteDirectoryPath,Nothing,Winscp.EnumerationOptions.None).Where(Function(x) (Path.GetExtension(x.FullName).ToLower.Equals(&quot;.dat&quot;) AndAlso Path.GetFileName(x.FullName).ToUpper.Trim.StartsWith(userFileId)))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;If sessionFiles IsNot Nothing AndAlso sessionFiles.Count &gt; 0 Then&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;there is a total of &quot;+sessionFiles.Count.ToString+&quot; &quot;+userFileId+&quot; files in the session&quot;)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;There are no files available in the remote folder path [&quot;+remoteDirectoryPath+&quot;] , please liaise with the business on this issue&quot;)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;downloadJacket(userFileId) = &quot;no &quot;+userFileId+&quot; file(s) found&quot;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;End If&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sessionFiles = sessionFiles.Where(Function(x) (x.LastWriteTime &gt;= fileDate AndAlso x.LastWriteTime &lt;= fileDate.AddDays(+fileDelayDaysCount)))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;If sessionFiles IsNot Nothing AndAlso sessionFiles.Count &gt; 0 Then&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(sessionFiles.Count.ToString+&quot; &quot;+userFileId+&quot; file(s) was found with as a weekend upload &quot;+fileDate.ToString())&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'check if more than one file was found&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Dim resp As String = Nothing&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;If sessionFiles.Count &gt; 1 Then&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;unsual! there are &quot;+sessionFiles.Count().ToString()+&quot; &quot;+userFileId+&quot; file(s) with date between &quot;+fileDate.ToString(&quot;dddd dd MMM yyyy&quot;)+&quot; and &quot;+fileDate.AddDays(+1).ToString(&quot;dddd dd MMM yyyy&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Resp = &quot;unsual! there are &quot;+sessionFiles.Count().ToString()+&quot; &quot;+userFileId+&quot; file(s) with date between &quot;+fileDate.ToString(&quot;dddd dd MMM yyyy&quot;)+&quot; and &quot;+fileDate.AddDays(+1).ToString(&quot;dddd dd MMM yyyy&quot;)&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;End If&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'Now download files&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;For Each fileObject As WinSCP.RemoteFileInfo In sessionFiles&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'check the file size&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Dim filesize As Double =fileObject.Length/1024&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Dim fileNameOnly As String = Path.GetFileName(fileObject.FullName)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;file &quot;+fileObject.FullName+&quot; available on remote server with size &quot;+filesize.ToString+&quot;Kb&quot;)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;If fileSize &lt; minExpectedFileSizeInKb Then&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Resp =  userFileId+&quot; file size below &quot;+minExpectedFileSizeInKb.ToString+&quot; Kb&quot;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;downloadJacket(fileNameOnly) = Resp&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; End If&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; 'Proceed to download&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Dim fullDownloadFilePath As String = Path.Combine(DownloadDestinationFolder,fileNameOnly)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  Dim transferResult As WinSCP.TransferOperationResult = session.GetFiles(fileObject.FullName, fullDownloadFilePath, False, transferOptions)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;downloading file &quot;+ fileNameOnly+&quot;.................... &quot;)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;'-check if transfer was successfull----&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;If transferResult.IsSuccess Then&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;If String.IsNullOrEmpty(Resp) Then&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Resp = &quot;Download Success&quot;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;End If&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;Successfully downloaded file &quot;+ fileNameOnly)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;downloadJacket(fileNameOnly) = Resp&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;If String.IsNullOrEmpty(Resp) Then&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Resp = &quot;Download Failed&quot;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;End If&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;download failed for file &quot;+fileNameOnly)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; downloadJacket(fileNameOnly) = Resp&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;End If&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Next&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;There are no &quot;+userFileId+&quot; file(s) found with date between &quot;+fileDate.ToString(&quot;dddd dd MMM yyyy&quot;)+&quot; and &quot;+fileDate.AddDays(+fileDelayDaysCount).ToString(&quot;dddd dd MMM yyyy&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;downloadJacket(userFileId) = &quot;no &quot;+userFileId+&quot; file(s) found with date between &quot;+fileDate.ToString(&quot;dddd dd MMM yyyy&quot;)+&quot; and &quot;+fileDate.AddDays(+fileDelayDaysCount).ToString(&quot;dddd dd MMM yyyy&quot;)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;End If&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;Aborting session&quot;)&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;session.Abort()&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(&quot;abort successful&quot;)&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;Catch ex As Exception&#xD;&#xA;&#x9;errorMessage = ex.Message&#xD;&#xA;&#x9;Console.WriteLine(errorMessage)&#xD;&#xA;&#x9;downloadJacket(userFileId) = String.Join(String.Empty,errorMessage.Split(Environment.NewLine.ToCharArray))&#xD;&#xA;End Try&#xD;&#xA;&#xD;&#xA;'Code by Peters&#xD;&#xA;'Happy Automation" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="387.2,304.8" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="serverUrl">[serverUrl]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="serverUsername">[serverUsername]</InArgument>
        <InArgument x:TypeArguments="ss:SecureString" x:Key="serverPassword">[serverPassword]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="remoteDirectoryPath">["/Home/"+serverUsername.Split("\"c)(serverUsername.Split("\"c).Length-1)]</InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="serverPortNumber">[serverPortNumber]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="sshHostKeyFingerPrint">[sshHostKeyFingerPrint]</InArgument>
        <InOutArgument x:TypeArguments="x:String" x:Key="errorMessage">[errorMessage]</InOutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="userFileId">[SubmitterId]</InArgument>
        <InArgument x:TypeArguments="s:DateTime" x:Key="fileDate">[DateTime.ParseExact(TransactionItem,"ddMMMyyyy",Nothing)]</InArgument>
        <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="downloadJacket">[downloadJacket]</InOutArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="minExpectedFileSizeInKb">20</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="fullyDownloadedFilePath">C:\Users\oajisafe\OneDrive - Help at Home\Documents\UiPath\GainwellFileUpload\data.dat</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="DownloadDestinationFolder">[DownloadDestinationFolder]</InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="fileDelayDaysCount">[fileDelayDaysCount]</InArgument>
      </ui:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeCode>
  </Sequence>
</Activity>