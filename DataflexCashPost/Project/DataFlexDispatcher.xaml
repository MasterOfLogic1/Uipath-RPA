<Activity mc:Ignorable="sap sap2010" x:Class="LoadQueue" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:hm="clr-namespace:HelpAtHome_RPA_Utilities.Messaging;assembly=HelpAtHome RPA Utilities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ucas="clr-namespace:UiPath.Core.Activities.Storage;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="BreakTriggerScopeInArgument" Type="InArgument(x:String)" />
    <x:Property Name="dataJacket" Type="OutArgument(scg:Dictionary(x:String, sd:DataTable))" />
    <x:Property Name="InvoiceNumbers" Type="OutArgument(s:String[])" />
    <x:Property Name="shouldResetLog" Type="InOutArgument(x:Boolean)" />
    <x:Property Name="checkNumber" Type="OutArgument(x:String)" />
    <x:Property Name="checkDate" Type="OutArgument(s:DateTime)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1124,6876.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>LoadQueue_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>HelpAtHome_RPA_Utilities.Messaging</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Globalization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>HelpAtHome RPA Utilities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="LoadQueue" sap:VirtualizedContainerService.HintSize="1134.4,6812" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt" />
      <Variable x:TypeArguments="x:String" Name="errorMessage" />
      <Variable x:TypeArguments="x:String" Name="sheetName" />
      <Variable x:TypeArguments="scg:IEnumerable(ucas:StorageFileInfo)" Name="storageBucketFiles" />
      <Variable x:TypeArguments="x:String" Name="InputFile" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtErrorDetail" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:SetAsset TimeoutMS="{x:Null}" AssetName="[in_Config(&quot;DataflexCashPostingLock&quot;).ToString()]" DisplayName="Lock Storage Bucket" FolderPath="[in_Config(&quot;OrchestratorQueueFolder&quot;).ToString()]" sap:VirtualizedContainerService.HintSize="1072,195.2" sap2010:WorkflowViewState.IdRef="SetAsset_1" Value="[&quot;LOCKED BY &quot;+EnVironment.MachineName]" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Formats Incoming Folder Path" DisplayName="Format Incoming folder" sap:VirtualizedContainerService.HintSize="1072,144.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Reusable_Components\FormatFolderPath.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_FolderPath">[in_Config("IncomingFolderPath").ToString()]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ucas:ListStorageFiles Filter="{x:Null}" TimeoutMS="{x:Null}" Directory="/" DisplayName="List Storage Files" sap:VirtualizedContainerService.HintSize="1072,134.4" sap2010:WorkflowViewState.IdRef="ListStorageFiles_1" Recursive="True" Result="[storageBucketFiles]" StorageBucketName="DataflexCashPosting">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ucas:ListStorageFiles>
    <ui:BuildDataTable sap2010:Annotation.AnnotationText="Build an error detail table . on this table we will save details of specific error for each storage bucket file" DataTable="[dtErrorDetail]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="1072,104" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;FileName&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Error&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;2000&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:BuildDataTable>
    <If sap2010:Annotation.AnnotationText="Storage bucket has files which should be uploaded into queue" Condition="[storageBucketFiles IsNot Nothing AndAlso storageBucketFiles.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="1072,5072" sap2010:WorkflowViewState.IdRef="If_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="1038.4,4580" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap2010:Annotation.AnnotationText="Now we loop through each of the files to find a valid file. once a valid file is found we break out of the loop" sap:VirtualizedContainerService.HintSize="995.2,4490.4" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEach x:TypeArguments="ucas:StorageFileInfo" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="932.8,4347.2" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[storageBucketFiles]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="ucas:StorageFileInfo">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ucas:StorageFileInfo" Name="storageFile" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="899.2,4159.2" sap2010:WorkflowViewState.IdRef="Sequence_11">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="856,4069.6" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch.Try>
                        <Sequence sap2010:Annotation.AnnotationText="Only download excel files" sap:VirtualizedContainerService.HintSize="819.2,3838.4" sap2010:WorkflowViewState.IdRef="Sequence_23">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If sap2010:Annotation.AnnotationText="Only download excel files" Condition="[Path.GetExtension(storageFile.FileFullPath).ToLower().Equals(&quot;.xlsx&quot;) Or Path.GetExtension(storageFile.FileFullPath).ToLower().Equals(&quot;.xls&quot;)]" sap:VirtualizedContainerService.HintSize="756.8,3586.4" sap2010:WorkflowViewState.IdRef="If_5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="723.2,3009.6" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence sap:VirtualizedContainerService.HintSize="680,2920" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="CheckNumber" />
                                    <Variable x:TypeArguments="x:String" Name="payDate" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Formats Incoming Folder Path" DisplayName="Format Incoming folder" sap:VirtualizedContainerService.HintSize="617.6,144.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Reusable_Components\FormatFolderPath.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_FolderPath">[in_Config("IncomingFolderPath").ToString()]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeWorkflowFile>
                                  <ui:MultipleAssign sap2010:Annotation.AnnotationText="File name must be like ChequeNumber_PayDate where Pay date must be in date format MMddyyyy" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="617.6,192" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[CheckNumber]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(storageFile.FileFullPath).Split("_"c)(0)]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[payDate]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(storageFile.FileFullPath).Split("_"c)(1)]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg:List>
                                    </ui:MultipleAssign.AssignOperations>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:MultipleAssign>
                                  <If sap2010:Annotation.AnnotationText="Upon vaild datewe proceed to read file and process further" Condition="[Date.TryParseExact(payDate,&quot;MMddyyyy&quot;,Nothing,Nothing,Nothing)]" sap:VirtualizedContainerService.HintSize="617.6,2391.2" sap2010:WorkflowViewState.IdRef="If_9">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="584,1996.8" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Sequence sap2010:Annotation.AnnotationText="Here we download the storage file , read it and validate the containing data " DisplayName="Proceed to Download and Read File" sap:VirtualizedContainerService.HintSize="540.8,1907.2" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="478.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_1">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[InputFile]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[Path.Combine(in_Config("IncomingFolderPath").ToString(),Path.GetFileName(storageFile.FileFullPath))]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="478.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;file found with valid pay date in bucket &quot;+  storageFile.FileFullPath+&quot;....Downloading file...&quot;]" />
                                          <ucas:DownloadStorageFile TimeoutMS="{x:Null}" Destination="[InputFile]" DisplayName="Download Storage File" sap:VirtualizedContainerService.HintSize="478.4,134.4" sap2010:WorkflowViewState.IdRef="DownloadStorageFile_1" Path="[storageFile.FileFullPath]" StorageBucketName="DataflexCashPosting" />
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="478.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[storageFile.FileFullPath+&quot; downloaded successfully..&quot;]" />
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="KillExcel" sap:VirtualizedContainerService.HintSize="478.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Reusable_Components\KillExcelUpdated.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="478.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Reading &quot;+ Path.GetFileName(InputFile)]" />
                                          <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" CreateNewFile="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="478.4,52.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[InputFile]">
                                            <ui:ExcelApplicationScope.Body>
                                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="449.6,292.8" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:ExcelGetWorkbookSheet DisplayName="Get Workbook Sheet" sap:VirtualizedContainerService.HintSize="387.2,80.8" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheet_2" Index="0" Sheet="[sheetName]" />
                                                  <ui:ExcelReadRange AddHeaders="True" DataTable="[dt]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="387.2,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="[sheetName]">
                                                    <ui:ExcelReadRange.Range>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <Literal x:TypeArguments="x:String" Value="" />
                                                      </InArgument>
                                                    </ui:ExcelReadRange.Range>
                                                  </ui:ExcelReadRange>
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:ExcelApplicationScope.Body>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:ExcelApplicationScope>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="KillExcel" sap:VirtualizedContainerService.HintSize="478.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Reusable_Components\KillExcelUpdated.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Invoke Code To Generate Daaa Jacket For Processing" Code="Try&#xA;Console.WriteLine(&quot;Generating data jacket............&quot;)&#xA;If dt IsNot Nothing AndAlso dt.Rows.Count &gt; 0 Then&#xA;dataJacket = New Dictionary(Of String, DataTable)&#xA;'first correct all the column names &#xA;For Each c As DataColumn In dt.Columns&#xA;&#x9;c.ColumnName =  c.ColumnName.Replace(&quot; &quot;,String.Empty).ToLower()&#xA;Next&#xA;'check for list of missing columns&#xA;Dim ListOfMissingCols As New List(Of String)&#xA;For Each col As String In expectedColumns&#xA;&#x9;If Not dt.Columns.Contains(col) Then&#xA;&#x9;&#x9;ListOfMissingCols.Add(col)&#xA;&#x9;End If&#xA;Next&#xA;'stop program if columns are mssing&#xA;If ListOfMissingCols IsNot Nothing AndAlso ListOfMissingCols.Count &gt; 0 Then&#xA;&#x9;Throw New SystemException(&quot;The following columns are missing : &quot;+ String.Join(&quot;,&quot;,ListOfMissingCols))&#xA;End If&#xA;'ensure it is only one Check number per file- this is to make sure we validate the Check number&#xA;Dim CheckNumbers As String() = dt.AsEnumerable().Select(Function(x) x(&quot;checknumber&quot;).ToString()).Distinct().ToArray()&#xA;If CheckNumbers.Length &gt; 1 Then&#xA;&#x9;Throw New SystemException(&quot;a single file should not contain more than one check number&quot;)&#xA;End If&#xA;If Not CheckNumbers(0).Equals(expectedCheckNumber) Then&#xA;&#x9;Throw New SystemException(&quot;check number [&quot;+expectedCheckNumber+&quot;] used to name the file did not match check number inside the file [&quot;+CheckNumbers(0)+&quot;].&quot;)&#xA;End If&#xA;&#xA;'Now add paydate column but first remove any column with such name&#xA;If dt.Columns.Contains(&quot;paydate&quot;) Then&#xA;&#x9;dt.Columns.Remove(&quot;paydate&quot;)&#xA;End If&#xA;dt.Columns.Add(&quot;paydate&quot;,GetType(String))&#xA;For Each row As DataRow In dt.Rows&#xA;&#x9;row(&quot;paydate&quot;) = paydate&#xA;Next&#xA;&#xA;'Now generate the data jacket&#xA;InvoiceNumbers = dt.AsEnumerable().Select(Function(x) x(&quot;invoiceno&quot;).ToString()).Distinct().ToArray()&#xA;For Each InvoiceNumber As String In InvoiceNumbers&#xA;&#x9;Dim dtmp As DataTable = dt.AsEnumerable().Where(Function(x) x(&quot;invoiceno&quot;).ToString().Trim.Replace(&quot; &quot;,String.Empty).Equals(InvoiceNumber)).CopyToDataTable()&#xA;&#x9;'add to data jacket&#xA;&#x9;dataJacket(InvoiceNumber) = dtmp&#xA;Next&#xA;Console.WriteLine(InvoiceNumbers.Length().ToString())&#xA;Else&#xA;&#x9;Throw New SystemException(&quot;No data recieved from file&quot;)&#xA;End If&#xA;Catch ex As Exception&#xA;errorMessage = ex.Message&#xA;End Try" DisplayName="Invoke Code To Generate Daaa Jacket For Processing" sap:VirtualizedContainerService.HintSize="478.4,196" sap2010:WorkflowViewState.IdRef="InvokeCode_4">
                                            <ui:InvokeCode.Arguments>
                                              <InArgument x:TypeArguments="sd:DataTable" x:Key="dt">[dt]</InArgument>
                                              <OutArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)" x:Key="dataJacket">[dataJacket]</OutArgument>
                                              <OutArgument x:TypeArguments="s:String[]" x:Key="InvoiceNumbers">[InvoiceNumbers]</OutArgument>
                                              <InOutArgument x:TypeArguments="x:String" x:Key="errorMessage">[errorMessage]</InOutArgument>
                                              <InArgument x:TypeArguments="s:String[]" x:Key="expectedColumns">[{"supplementnumber","period","clientnumber","contractcode","checknumber","totaladjustmentamount","co-pay"}]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="expectedCheckNumber">[CheckNumber]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="payDate">[payDate]</InArgument>
                                            </ui:InvokeCode.Arguments>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InvokeCode>
                                          <If sap2010:Annotation.AnnotationText="Stop program if error occured in code above" Condition="[Not String.IsNullOrEmpty(errorMessage)]" sap:VirtualizedContainerService.HintSize="478.4,96.8" sap2010:WorkflowViewState.IdRef="If_10">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="377.6,180" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Throw Exception="[New SystemException(errorMessage)]" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="Throw_8" />
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap:VirtualizedContainerService.HintSize="300,82.4" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.4,148" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                                            <ui:MultipleAssign.AssignOperations>
                                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[CheckNumber]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(InputFile).Split("_"c)(0)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="s:DateTime">[checkDate]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(Path.GetFileNameWithoutExtension(InputFile).Split("_"c)(1),"MMddyyyy",Nothing,Nothing)]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                              </scg:List>
                                            </ui:MultipleAssign.AssignOperations>
                                          </ui:MultipleAssign>
                                        </Sequence>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="377.6,180" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Throw Exception="[New SystemException(&quot;File name must be like CheckNumber_PayDate where Pay date must be in date format MMddyyyy&quot;)]" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="Throw_9" />
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="377.6,362.4" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Warn" Message="[storageFile.FileFullPath+&quot; is not a .xlsx or .xls file&quot;]" />
                                <Throw Exception="[New SystemException(&quot;file is not a .xlsx or .xls file&quot;)]" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="Throw_5" />
                              </Sequence>
                            </If.Else>
                          </If>
                          <ui:Break sap2010:Annotation.AnnotationText="We break out of the for each loop once we have picked a file so the next robot can take the other file" sap:VirtualizedContainerService.HintSize="756.8,68.8" sap2010:WorkflowViewState.IdRef="Break_2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:Break>
                        </Sequence>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="822.4,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <Sequence sap:VirtualizedContainerService.HintSize="450.4,451.2" sap2010:WorkflowViewState.IdRef="Sequence_24">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Formats Incoming Folder Path" DisplayName="Format Incoming folder" sap:VirtualizedContainerService.HintSize="388,144.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Reusable_Components\FormatFolderPath.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_FolderPath">[in_Config("IncomingFolderPath").ToString()]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:InvokeWorkflowFile>
                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Path.GetFileName(storageFile.FileFullPath),exception.Message}]" DataTable="[dtErrorDetail]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="388,186" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                            </Sequence>
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                      <TryCatch.Finally>
                        <ucas:DeleteStorageFile TimeoutMS="{x:Null}" DisplayName="Delete Storage File" sap:VirtualizedContainerService.HintSize="334,133" sap2010:WorkflowViewState.IdRef="DeleteStorageFile_3" Path="[storageFile.FileFullPath]" StorageBucketName="DataflexCashPosting" />
                      </TryCatch.Finally>
                    </TryCatch>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <ui:ForEach.MaxIterations>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:ForEach.MaxIterations>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
          </Sequence>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="377.6,277.6" sap2010:WorkflowViewState.IdRef="Sequence_9">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;No file found&quot;,&quot;There were no files in the DataflexCashPosting Ochestrator Storage bucket&quot;}]" DataTable="[dtErrorDetail]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="334.4,188" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
        </Sequence>
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1072,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Releasing lock..&quot;]" />
    <ui:SetAsset TimeoutMS="{x:Null}" AssetName="[in_Config(&quot;DataflexCashPostingLock&quot;).ToString()]" DisplayName="Release Lock" FolderPath="[in_Config(&quot;OrchestratorQueueFolder&quot;).ToString()]" sap:VirtualizedContainerService.HintSize="1072,195.2" sap2010:WorkflowViewState.IdRef="SetAsset_2" Value="[&quot;RELEASED&quot;]" />
    <If sap2010:Annotation.AnnotationText="Now Check if we actually go data if we didnt ten send error Messages" Condition="[dataJacket IsNot Nothing AndAlso dataJacket.Keys.Count &gt; 0]" sap:VirtualizedContainerService.HintSize="1072,112.8" sap2010:WorkflowViewState.IdRef="If_11">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="480,442.4" sap2010:WorkflowViewState.IdRef="Sequence_31">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch sap2010:Annotation.AnnotationText="Send Teams Notification here" DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="436.8,352.8" sap2010:WorkflowViewState.IdRef="TryCatch_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <hm:SendTeamsChannelMessage sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="SendTeamsChannelMessage_1" teamsMessage="[File.ReadAllText(&quot;Data\EmailTemplates\TeamsNotification.txt&quot;).Replace(&quot;ProcessName&quot;,in_Config(&quot;ProcessName&quot;).ToString()).Replace(&quot;ReportDate&quot;,Now.ToString(&quot;ddMMMyyyy HH:mm:ss&quot;)).Replace(&quot;MachineName&quot;,System.Environment.MachineName).Replace(&quot;Response&quot;,&quot;Valid file [&quot;+ Path.GetFileName(InputFile)+&quot;] downloaded from ochestrator storage bucket would be processed in &quot;+Environment.MachineName)]" />
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="377.6,333.6" sap2010:WorkflowViewState.IdRef="Sequence_32">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SendCustomMailDipactherFailed.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Project\SendCustomMailDipactherFailed.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="generalErrorMessage">[File.ReadAllText("Data\EmailTemplates\DispatcherFailedToFindFileMailMessage.txt")]</InArgument>
              <InArgument x:TypeArguments="sd:DataTable" x:Key="dtErrorDetail">[dtErrorDetail]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <Throw Exception="[New SystemException(File.ReadAllText(&quot;Data\EmailTemplates\DispatcherFailedToFindFileMailMessage.txt&quot;))]" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="Throw_10" />
        </Sequence>
      </If.Else>
    </If>
    <If sap2010:Annotation.AnnotationText="Reset log folder path on request from the ochestrator" Condition="[shouldResetLog]" sap:VirtualizedContainerService.HintSize="1072,96.8" sap2010:WorkflowViewState.IdRef="If_12">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="476.8,324.8" sap2010:WorkflowViewState.IdRef="Sequence_33">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Reset Log Folder On Request" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Reusable_Components\FormatFolderPath.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_FolderPath">[in_Config("LogsFolderPath").ToString()]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[shouldResetLog]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_34" />
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1072,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Finished executing dispatcher&quot;]" />
  </Sequence>
</Activity>