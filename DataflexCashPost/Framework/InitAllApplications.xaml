<Activity mc:Ignorable="sap sap2010" x:Class="Initialize_Applications" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:hm="clr-namespace:HelpAtHome_RPA_Utilities.Messaging;assembly=HelpAtHome RPA Utilities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/cv" xmlns:p1="http://schemas.uipath.com/workflow/activities/ocr" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd2="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:uc="clr-namespace:UiPath.CV;assembly=UiPath.CV" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_ExternalDictionary" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="InputFile" Type="OutArgument(x:String)" />
    <x:Property Name="SnowFlakesConnectionString" Type="OutArgument(x:String)" />
    <x:Property Name="dataJacket" Type="OutArgument(scg:Dictionary(x:String, sd:DataTable))" />
    <x:Property Name="InvoiceNumbers" Type="OutArgument(s:String[])" />
    <x:Property Name="shouldResetLog" Type="InOutArgument(x:Boolean)" />
    <x:Property Name="shouldRefresh" Type="InOutArgument(x:Boolean)" />
    <x:Property Name="checkNumber" Type="OutArgument(x:String)" />
    <x:Property Name="checkDate" Type="OutArgument(s:DateTime)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>850.4,1384.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Initialization_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>UiPath.Shared.ObjectLibrary</x:String>
      <x:String>UiPath.CV.Activities</x:String>
      <x:String>UiPath.CV.Activities.Interfaces</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>HelpAtHome_RPA_Utilities.Messaging</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>HelpAtHome RPA Utilities</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Open applications used in the process and do necessary initialization procedures (e.g., login)." DisplayName="Initialize All Applications" sap:VirtualizedContainerService.HintSize="499.2,1320" sap2010:WorkflowViewState.IdRef="Sequence_9">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="conn" />
      <Variable x:TypeArguments="sd1:Image" Name="Image" />
      <Variable x:TypeArguments="x:Boolean" Name="activeDataflex" />
      <Variable x:TypeArguments="x:String" Name="processLock" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log message (Initialize applications)" sap:VirtualizedContainerService.HintSize="436.8,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;Creating job stack...&quot;]" />
    <If sap2010:Annotation.AnnotationText="Refersh by deleting resume log" Condition="[shouldRefresh]" sap:VirtualizedContainerService.HintSize="436.8,96.8" sap2010:WorkflowViewState.IdRef="If_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="476.8,324.8" sap2010:WorkflowViewState.IdRef="Sequence_24">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Reusable_Components\FormatFolderPath.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Reusable_Components\FormatFolderPath.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_FolderPath">[in_Config("IncomingFolderPath").ToString()]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[shouldRefresh]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_25" />
      </If.Else>
    </If>
    <TryCatch sap2010:Annotation.AnnotationText="First attempt is to create a job stack from the incoming folder . if not successfull then check the storage bucket for a job" DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="436.8,388.8" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CreateJobStackFromIncoming.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Project\CreateJobStackFromIncoming.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="IncomingFolderPath">
              <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;IncomingFolderPath&quot;).ToString()" />
            </InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="InputFile">
              <VisualBasicReference x:TypeArguments="x:String" ExpressionText="InputFile" />
            </OutArgument>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)" x:Key="dataJacket">
              <VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)" ExpressionText="dataJacket" />
            </OutArgument>
            <OutArgument x:TypeArguments="s:String[]" x:Key="InvoiceNumbers">
              <VisualBasicReference x:TypeArguments="s:String[]" ExpressionText="InvoiceNumbers" />
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="CheckNumber">
              <VisualBasicReference x:TypeArguments="x:String" ExpressionText="checkNumber" />
            </OutArgument>
            <OutArgument x:TypeArguments="s:DateTime" x:Key="checkDate">
              <VisualBasicReference x:TypeArguments="s:DateTime" ExpressionText="checkDate" />
            </OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap2010:Annotation.AnnotationText="Check if storage bukcet is locked , if bucket is not locked we proceed to run dispacther" sap:VirtualizedContainerService.HintSize="449.6,127.2" sap2010:WorkflowViewState.IdRef="Sequence_17">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence sap2010:Annotation.AnnotationText="Here we wait for x amount of seconds until the data flex storage buckts is free from use while waiting we check for the locked statuus at regular intervals and if it is unlocked we proceed. ie there might be another machine using the storage bucket" sap:VirtualizedContainerService.HintSize="449.6,159.2" sap2010:WorkflowViewState.IdRef="Sequence_16">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="387.2,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Waiting for storage bucket to be unclocked&quot;]" />
                <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[in_Config(&quot;DataflexCashPostingLock&quot;).ToString()]" CacheStrategy="None" DisplayName="Get Asset" FolderPath="[in_Config(&quot;OrchestratorQueueFolder&quot;).ToString()]" sap:VirtualizedContainerService.HintSize="387.2,143.2" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
                  <ui:GetRobotAsset.Value>
                    <OutArgument x:TypeArguments="x:String">[processLock]</OutArgument>
                  </ui:GetRobotAsset.Value>
                </ui:GetRobotAsset>
                <ui:TimeoutScope sap2010:Annotation.AnnotationText="Here we wait for x amount of seconds until the data flex storage buckts is free from use while waiting we check for the locked statuus at regular intervals and if it is unlocked we proceed. ie there might be another machine using the storage bucket" DisplayName="Timeout Scope" sap:VirtualizedContainerService.HintSize="387.2,224.8" sap2010:WorkflowViewState.IdRef="TimeoutScope_1" ThrowExceptionAfter="[TimeSpan.FromSeconds(60)]" TimeoutMessage="The Dispatcher is currently being used by another Machine or might have been errorneously locked by another machine in the last session.To release lock, please set the value of the asset DataflexCashPostingLock to UNLOCKED.">
                  <ui:TimeoutScope.Body>
                    <ActivityAction x:TypeArguments="Activity">
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="473.6,612" sap2010:WorkflowViewState.IdRef="Sequence_15">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InterruptibleWhile CurrentIndex="{x:Null}" Condition="[processLock.Contains(&quot;LOCKED&quot;)]" DisplayName="While" sap:VirtualizedContainerService.HintSize="411.2,500" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                          <ui:InterruptibleWhile.Body>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="377.6,363.2" sap2010:WorkflowViewState.IdRef="Sequence_14">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="Delay_1" />
                              <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[in_Config(&quot;DataflexCashPostingLock&quot;).ToString()]" CacheStrategy="None" DisplayName="Get Asset" FolderPath="[in_Config(&quot;OrchestratorQueueFolder&quot;).ToString()]" sap:VirtualizedContainerService.HintSize="334.4,143.2" sap2010:WorkflowViewState.IdRef="GetRobotAsset_2">
                                <ui:GetRobotAsset.Value>
                                  <OutArgument x:TypeArguments="x:String">[processLock]</OutArgument>
                                </ui:GetRobotAsset.Value>
                              </ui:GetRobotAsset>
                            </Sequence>
                          </ui:InterruptibleWhile.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InterruptibleWhile>
                      </Sequence>
                    </ActivityAction>
                  </ui:TimeoutScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:TimeoutScope>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="387.2,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Storage bucket is unlocked and free to use&quot;]" />
              </Sequence>
              <TryCatch sap2010:Annotation.AnnotationText="We try to execute the dispatcher " DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="449.6,96.8" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="The dispatcher picks a file from the storage bucket and processes the file . once a valid file is pick the dispacther gets the data out of the file and exits the loop for the next machine to take the next  file" DisplayName="DataFlexDispatcher.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="333.6,189.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Project\DataFlexDispatcher.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                        <VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument">
                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Nothing" />
                      </InArgument>
                      <OutArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)" x:Key="dataJacket">
                        <VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)" ExpressionText="dataJacket" />
                      </OutArgument>
                      <OutArgument x:TypeArguments="s:String[]" x:Key="InvoiceNumbers">
                        <VisualBasicReference x:TypeArguments="s:String[]" ExpressionText="InvoiceNumbers" />
                      </OutArgument>
                      <InOutArgument x:TypeArguments="x:Boolean" x:Key="shouldResetLog">
                        <VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="shouldResetLog" />
                      </InOutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="checkNumber">
                        <VisualBasicReference x:TypeArguments="x:String" ExpressionText="checkNumber" />
                      </OutArgument>
                      <OutArgument x:TypeArguments="s:DateTime" x:Key="checkDate">
                        <VisualBasicReference x:TypeArguments="s:DateTime" ExpressionText="checkDate" />
                      </OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="403.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Sequence sap:VirtualizedContainerService.HintSize="548.8,413.6" sap2010:WorkflowViewState.IdRef="Sequence_21">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch sap2010:Annotation.AnnotationText="Try to release lockif it was locked by this machine and throw an error" DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="387.2,112.8" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch.Try>
                            <Sequence sap2010:Annotation.AnnotationText="Release the storage  bucket lock" sap:VirtualizedContainerService.HintSize="450,112" sap2010:WorkflowViewState.IdRef="Sequence_20">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[in_Config(&quot;DataflexCashPostingLock&quot;).ToString()]" CacheStrategy="None" DisplayName="Get Asset" FolderPath="[in_Config(&quot;OrchestratorQueueFolder&quot;).ToString()]" sap:VirtualizedContainerService.HintSize="388,143" sap2010:WorkflowViewState.IdRef="GetRobotAsset_3">
                                <ui:GetRobotAsset.Value>
                                  <OutArgument x:TypeArguments="x:String">[processLock]</OutArgument>
                                </ui:GetRobotAsset.Value>
                              </ui:GetRobotAsset>
                              <If sap2010:Annotation.AnnotationText="when storage was locked by this machine then we want to unlock the machine" Condition="[processLock.Contains(Environment.MachineName)]" sap:VirtualizedContainerService.HintSize="388,109" sap2010:WorkflowViewState.IdRef="If_2">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="376,463" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Releasing lock..&quot;]" />
                                    <ui:SetAsset TimeoutMS="{x:Null}" AssetName="[in_Config(&quot;DataflexCashPostingLock&quot;).ToString()]" DisplayName="Release Lock" FolderPath="[in_Config(&quot;OrchestratorQueueFolder&quot;).ToString()]" sap:VirtualizedContainerService.HintSize="334,194" sap2010:WorkflowViewState.IdRef="SetAsset_1" Value="[&quot;RELEASED&quot;]" />
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_23" />
                                </If.Else>
                              </If>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                          <TryCatch.Finally>
                            <Throw Exception="[New SystemException(exception.Message)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_2" />
                          </TryCatch.Finally>
                        </TryCatch>
                      </Sequence>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:RetryScope sap2010:Annotation.AnnotationText="Now we try to open dataflex we make 4 attempts if it fails " DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="436.8,96.8" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="4" RetryInterval="00:00:04">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="449.6,225.6" sap2010:WorkflowViewState.IdRef="Sequence_13">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SetupDataFlex.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="387.2,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Project\SetupDataFlex.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <scg:Dictionary x:TypeArguments="x:String, Argument" />
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
          </Sequence>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean" />
      </ui:RetryScope.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:RetryScope>
    <TryCatch sap2010:Annotation.AnnotationText="Confirm if dataflex is open or not" DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="436.8,96.8" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <p:CVScope ContinueOnError="{x:Null}" DelayBefore="{x:Null}" ScopeId="{x:Null}" Server="{x:Null}" CvMethod="ElementDetection, OCR" DesignTimeCacheId="9de6c5f2-6ead-4320-b3be-57bf44eeb5f9" DisplayName="CV Screen Scope 'cmd.exe GS'" sap:VirtualizedContainerService.HintSize="433.6,477.6" sap2010:WorkflowViewState.IdRef="CVScope_1" SendOnPremData="False" Version="V6">
          <p:CVScope.Body>
            <ActivityAction x:TypeArguments="x:Object">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Object" Name="CVSessionData" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_10">
                <p:CvElementExistsWithDescriptor DelayScreenshotAfterScroll="{x:Null}" Descriptor="[&quot;Target: Text 'Homemaker Management System' (25,40,261,17)&quot;]" DesignTimeCacheId="9de6c5f2-6ead-4320-b3be-57bf44eeb5f9" DesignTimeScaleFactor="1.25" DisplayName="CV Element Exists - Text" sap:VirtualizedContainerService.HintSize="400,137" sap2010:WorkflowViewState.IdRef="CvElementExistsWithDescriptor_2" InformativeScreenshot="c21226c5f0ba9b1090ffd85e10d48f1f" NumberOfScrolls="2" Result="[activeDataflex]" ScrollDirection="None" TimeoutMS="3000" Version="V6">
                  <p:CvElementExistsWithDescriptor.DesignTimeDescriptor>
                    <uc:CvDescriptor Id="6c1c3202-3f1a-4b4c-b557-dd62e958be49">
                      <uc:CvDescriptor.Target>
                        <uc:CvElementDescriptor CellExtraInfo="{x:Null}" DesignTimeArea="25, 40, 261, 17" ElementType="Text" Text="Homemaker Management System" />
                      </uc:CvDescriptor.Target>
                    </uc:CvDescriptor>
                  </p:CvElementExistsWithDescriptor.DesignTimeDescriptor>
                </p:CvElementExistsWithDescriptor>
              </Sequence>
            </ActivityAction>
          </p:CVScope.Body>
          <p:CVScope.DesignTimeCache>
            <uc:CVCache CvUiElements="{x:Null}" OcrTexts="{x:Null}" DataSent="False" />
          </p:CVScope.DesignTimeCache>
          <p:CVScope.DesignTimeCacheContainer>
            <uc:CvCacheContainer>
              <uc:CvCacheContainer.Caches>
                <scg:List x:TypeArguments="uc:CVCache" Capacity="1">
                  <uc:CVCache DataSent="False" DisplayName="Screen CV Element Exists - 'Ho (Main)" Id="9de6c5f2-6ead-4320-b3be-57bf44eeb5f9" InformativeScreenshot="36ced894e079a6e841a557293102ee53" LogicalPosition="-1, -9" OcrText="GS Telnet Client 2k3-dfsql x:l X + v _ X Homemaker Management System Payment Entry Ref Number:&lt;______&gt; Pay period: (YYYYMM) Supp#: Client Number: Supervisor: Pay Date: Client Name: Contract: Chk#: I n V O i C e I n f O Outstand: MCO Pymt: Ins: This Pymt: F1 - Help F2 - Save F3 - Options F4 - Find F5 - Sfind F7 - Prev F8 - Next F9 - Clear F10- Delete Alt-C - Calc &lt;ESC&gt; - Quit V3.2 08/2021" Position="-1, -9" ScaleFactor="1.25" ScreenshotGuid="03ac172a-1e5b-47a4-886b-a33a8ca0500f" ServerVersion="1">
                    <uc:CVCache.CvAnchorRelations>
                      <scg:List x:TypeArguments="uc:AnchorRelationInfo" Capacity="8">
                        <uc:AnchorRelationInfo IsTargetText="True" Target="24">
                          <uc:AnchorRelationInfo.Anchors>
                            <x:Array Type="x:Int32">
                              <x:Int32>25</x:Int32>
                            </x:Array>
                          </uc:AnchorRelationInfo.Anchors>
                        </uc:AnchorRelationInfo>
                        <uc:AnchorRelationInfo IsTargetText="True" Target="45">
                          <uc:AnchorRelationInfo.Anchors>
                            <x:Array Type="x:Int32">
                              <x:Int32>44</x:Int32>
                            </x:Array>
                          </uc:AnchorRelationInfo.Anchors>
                        </uc:AnchorRelationInfo>
                        <uc:AnchorRelationInfo IsTargetText="True" Target="71">
                          <uc:AnchorRelationInfo.Anchors>
                            <x:Array Type="x:Int32">
                              <x:Int32>70</x:Int32>
                            </x:Array>
                          </uc:AnchorRelationInfo.Anchors>
                        </uc:AnchorRelationInfo>
                        <uc:AnchorRelationInfo IsTargetText="True" Target="42">
                          <uc:AnchorRelationInfo.Anchors>
                            <x:Array Type="x:Int32">
                              <x:Int32>41</x:Int32>
                            </x:Array>
                          </uc:AnchorRelationInfo.Anchors>
                        </uc:AnchorRelationInfo>
                        <uc:AnchorRelationInfo IsTargetText="True" Target="68">
                          <uc:AnchorRelationInfo.Anchors>
                            <x:Array Type="x:Int32">
                              <x:Int32>65</x:Int32>
                            </x:Array>
                          </uc:AnchorRelationInfo.Anchors>
                        </uc:AnchorRelationInfo>
                      </scg:List>
                    </uc:CVCache.CvAnchorRelations>
                    <uc:CVCache.CvUiElements>
                      <scg:List x:TypeArguments="uc:CvElementInfo" Capacity="32">
                        <uc:CvElementInfo Category="CloseButton" Region="217, 4, 18, 18" />
                        <uc:CvElementInfo Category="Icon" Region="13, 4, 21, 20" />
                        <uc:CvElementInfo Category="CloseButton" Region="1503, 4, 20, 19" />
                        <uc:CvElementInfo Category="MinimizeButton" Region="1409, 4, 21, 19" />
                        <uc:CvElementInfo Category="MaximizeButton" Region="1456, 4, 19, 19" />
                        <uc:CvElementInfo Category="Icon" Region="260, 4, 18, 18" />
                        <uc:CvElementInfo Category="Button" Region="7, 0, 243, 32" />
                        <uc:CvElementInfo Category="InputBox" Region="31, 120, 697, 259" />
                        <uc:CvElementInfo Category="Button" Confidence="Runtime" Region="248, 0, 37, 28" />
                        <uc:CvElementInfo Category="Icon" Confidence="Runtime" Region="455, 111, 16, 19" />
                        <uc:CvElementInfo Category="ArrowButton" Confidence="Runtime" Region="158, 76, 16, 16" />
                        <uc:CvElementInfo Category="InputBox" Confidence="Runtime" Region="756, 44, 752, 450" />
                        <uc:CvElementInfo Category="InputBox" Confidence="Runtime" Region="379, 74, 24, 18" />
                        <uc:CvElementInfo Category="Icon" Confidence="Runtime" Region="1457, 4, 18, 18" />
                        <uc:CvElementInfo Category="ArrowButton" Confidence="Runtime" Region="158, 58, 15, 14" />
                        <uc:CvElementInfo Category="Icon" Confidence="Runtime" Region="474, 114, 17, 16" />
                        <uc:CvElementInfo Category="ArrowButton" Confidence="Runtime" Region="548, 405, 20, 22" />
                        <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="184, 448, 71, 52" />
                        <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="616, 448, 57, 48" />
                        <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="448, 449, 60, 47" />
                        <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="511, 449, 55, 45" />
                        <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="316, 448, 60, 47" />
                        <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="48, 456, 46, 40" />
                        <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="576, 449, 43, 47" />
                        <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="258, 448, 51, 48" />
                        <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="371, 448, 64, 48" />
                        <uc:CvElementInfo Category="InputBox" Confidence="Runtime" Region="264, 0, 1230, 31" />
                        <uc:CvElementInfo Category="ArrowButton" Region="288, 4, 20, 20" />
                      </scg:List>
                    </uc:CVCache.CvUiElements>
                    <uc:CVCache.OcrTexts>
                      <scg:List x:TypeArguments="uc:OcrTextInfo" Capacity="81">
                        <uc:OcrTextInfo Region="41, 8, 17, 12" Text="GS" />
                        <uc:OcrTextInfo Region="60, 8, 36, 12" Text="Telnet" />
                        <uc:OcrTextInfo Region="96, 8, 34, 12" Text="Client" />
                        <uc:OcrTextInfo Region="138, 9, 54, 13" Text="2k3-dfsql" />
                        <uc:OcrTextInfo Region="194, 8, 13, 12" Text="x:l" />
                        <uc:OcrTextInfo Region="220, 8, 10, 10" Text="X" />
                        <uc:OcrTextInfo Region="262, 8, 12, 12" Text="+" />
                        <uc:OcrTextInfo Region="292, 10, 12, 8" Text="v" />
                        <uc:OcrTextInfo Region="1412, 1, 13, 13" Text="_" />
                        <uc:OcrTextInfo Region="1505, 6, 13, 13" Text="X" />
                        <uc:OcrTextInfo Region="25, 40, 88, 14" Text="Homemaker" />
                        <uc:OcrTextInfo Region="121, 40, 96, 17" Text="Management" />
                        <uc:OcrTextInfo Region="226, 40, 60, 17" Text="System" />
                        <uc:OcrTextInfo Region="620, 40, 68, 17" Text="Payment" />
                        <uc:OcrTextInfo Region="697, 40, 49, 17" Text="Entry" />
                        <uc:OcrTextInfo Region="53, 57, 32, 14" Text="Ref" />
                        <uc:OcrTextInfo Region="92, 57, 146, 16" Text="Number:&lt;______&gt;" />
                        <uc:OcrTextInfo Region="265, 58, 29, 16" Text="Pay" />
                        <uc:OcrTextInfo Region="304, 57, 65, 17" Text="period:" />
                        <uc:OcrTextInfo Region="448, 56, 76, 18" Text="(YYYYMM)" />
                        <uc:OcrTextInfo Region="572, 57, 54, 18" Text="Supp#:" />
                        <uc:OcrTextInfo Region="24, 76, 60, 16" Text="Client" />
                        <uc:OcrTextInfo Region="92, 76, 64, 16" Text="Number:" />
                        <uc:OcrTextInfo Region="265, 76, 104, 17" Text="Supervisor:" />
                        <uc:OcrTextInfo Region="544, 76, 30, 16" Text="Pay" />
                        <uc:OcrTextInfo Region="581, 76, 48, 14" Text="Date:" />
                        <uc:OcrTextInfo Region="24, 94, 60, 14" Text="Client" />
                        <uc:OcrTextInfo Region="92, 94, 46, 14" Text="Name:" />
                        <uc:OcrTextInfo Region="428, 94, 85, 14" Text="Contract:" />
                        <uc:OcrTextInfo Region="562, 94, 46, 14" Text="Chk#:" />
                        <uc:OcrTextInfo Region="265, 113, 10, 13" Text="I" />
                        <uc:OcrTextInfo Region="284, 116, 10, 10" Text="n" />
                        <uc:OcrTextInfo Region="304, 116, 10, 10" Text="V" />
                        <uc:OcrTextInfo Region="324, 116, 9, 10" Text="O" />
                        <uc:OcrTextInfo Region="341, 112, 12, 14" Text="i" />
                        <uc:OcrTextInfo Region="361, 116, 10, 10" Text="C" />
                        <uc:OcrTextInfo Region="380, 116, 10, 10" Text="e" />
                        <uc:OcrTextInfo Region="418, 113, 12, 13" Text="I" />
                        <uc:OcrTextInfo Region="438, 116, 9, 10" Text="n" />
                        <uc:OcrTextInfo Region="457, 112, 10, 14" Text="f" />
                        <uc:OcrTextInfo Region="476, 116, 10, 10" Text="O" />
                        <uc:OcrTextInfo Region="44, 132, 82, 16" Text="Outstand:" />
                        <uc:OcrTextInfo Region="226, 132, 30, 14" Text="MCO" />
                        <uc:OcrTextInfo Region="265, 132, 42, 17" Text="Pymt:" />
                        <uc:OcrTextInfo Region="409, 132, 36, 14" Text="Ins:" />
                        <uc:OcrTextInfo Region="524, 130, 40, 16" Text="This" />
                        <uc:OcrTextInfo Region="572, 132, 46, 17" Text="Pymt:" />
                        <uc:OcrTextInfo Region="25, 408, 20, 14" Text="F1" />
                        <uc:OcrTextInfo Region="53, 409, 12, 12" Text="-" />
                        <uc:OcrTextInfo Region="72, 406, 40, 17" Text="Help" />
                        <uc:OcrTextInfo Region="140, 408, 20, 14" Text="F2" />
                        <uc:OcrTextInfo Region="169, 408, 10, 12" Text="-" />
                        <uc:OcrTextInfo Region="188, 408, 40, 14" Text="Save" />
                        <uc:OcrTextInfo Region="265, 408, 20, 14" Text="F3" />
                        <uc:OcrTextInfo Region="293, 408, 12, 12" Text="-" />
                        <uc:OcrTextInfo Region="312, 408, 69, 17" Text="Options" />
                        <uc:OcrTextInfo Region="409, 408, 20, 14" Text="F4" />
                        <uc:OcrTextInfo Region="437, 408, 12, 12" Text="-" />
                        <uc:OcrTextInfo Region="457, 406, 40, 16" Text="Find" />
                        <uc:OcrTextInfo Region="524, 408, 20, 14" Text="F5" />
                        <uc:OcrTextInfo Region="552, 408, 12, 14" Text="-" />
                        <uc:OcrTextInfo Region="572, 406, 48, 16" Text="Sfind" />
                        <uc:OcrTextInfo Region="649, 408, 20, 14" Text="F7" />
                        <uc:OcrTextInfo Region="677, 409, 12, 12" Text="-" />
                        <uc:OcrTextInfo Region="697, 408, 40, 14" Text="Prev" />
                        <uc:OcrTextInfo Region="25, 425, 20, 14" Text="F8" />
                        <uc:OcrTextInfo Region="53, 428, 12, 12" Text="-" />
                        <uc:OcrTextInfo Region="73, 425, 40, 14" Text="Next" />
                        <uc:OcrTextInfo Region="141, 425, 20, 14" Text="F9" />
                        <uc:OcrTextInfo Region="169, 428, 10, 12" Text="-" />
                        <uc:OcrTextInfo Region="188, 425, 49, 14" Text="Clear" />
                        <uc:OcrTextInfo Region="265, 425, 40, 14" Text="F10-" />
                        <uc:OcrTextInfo Region="313, 425, 58, 14" Text="Delete" />
                        <uc:OcrTextInfo Region="380, 425, 50, 16" Text="Alt-C" />
                        <uc:OcrTextInfo Region="437, 425, 12, 16" Text="-" />
                        <uc:OcrTextInfo Region="456, 425, 40, 14" Text="Calc" />
                        <uc:OcrTextInfo Region="620, 425, 49, 14" Text="&lt;ESC&gt;" />
                        <uc:OcrTextInfo Region="677, 425, 12, 16" Text="-" />
                        <uc:OcrTextInfo Region="696, 425, 40, 18" Text="Quit" />
                        <uc:OcrTextInfo Region="53, 444, 40, 14" Text="V3.2" />
                        <uc:OcrTextInfo Region="112, 444, 68, 16" Text="08/2021" />
                      </scg:List>
                    </uc:CVCache.OcrTexts>
                  </uc:CVCache>
                </scg:List>
              </uc:CvCacheContainer.Caches>
            </uc:CvCacheContainer>
          </p:CVScope.DesignTimeCacheContainer>
          <p:CVScope.OCREngine>
            <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd2:Rectangle, x:String))">
              <ActivityFunc.Argument>
                <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
              </ActivityFunc.Argument>
              <p1:UiPathScreenOCR ApiKey="{x:Null}" Endpoint="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Text="{x:Null}" UseLocalServer="{x:Null}" ComputeSkewAngle="False" ExtractWords="True" sap:VirtualizedContainerService.HintSize="200,24.8" sap2010:WorkflowViewState.IdRef="UiPathScreenOCR_1" Image="[Image]" Language="en" NoopExecution="False" Profile="Screen" Scale="1" Timeout="100000" />
            </ActivityFunc>
          </p:CVScope.OCREngine>
          <p:CVScope.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="af35e105-000c-4e68-9f1f-894198cdab7c" InformativeScreenshot="35581473fb27db77cf8db116cdb9ba9c" Selector="&lt;wnd app='windowsterminal.exe' appid='Microsoft.WindowsTerminal*' title='GS*Telnet*Client*' /&gt;" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
          </p:CVScope.Target>
          <p:CVScope.UseLocalServer>
            <InArgument x:TypeArguments="x:Boolean" />
          </p:CVScope.UseLocalServer>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </p:CVScope>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="414,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <If sap2010:Annotation.AnnotationText="Throw exception" Condition="[activeDataflex]" sap:VirtualizedContainerService.HintSize="410,591" sap2010:WorkflowViewState.IdRef="If_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="376,378" sap2010:WorkflowViewState.IdRef="Sequence_11">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <TryCatch sap2010:Annotation.AnnotationText="Send Teams Notification here : App opened  successfully" DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="334,109" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <hm:SendTeamsChannelMessage sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="SendTeamsChannelMessage_1" teamsMessage="[File.ReadAllText(&quot;Data\EmailTemplates\TeamsNotification.txt&quot;).Replace(&quot;ProcessName&quot;,in_Config(&quot;ProcessName&quot;).ToString()).Replace(&quot;ReportDate&quot;,Now.ToString(&quot;ddMMMyyyy HH:mm:ss&quot;)).Replace(&quot;MachineName&quot;,System.Environment.MachineName).Replace(&quot;Response&quot;,&quot;The dataflex application was successfully opened in &quot;+Environment.MachineName+&quot;.&quot;)]" />
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Active dataflex spotted&quot;]" />
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="377.6,180" sap2010:WorkflowViewState.IdRef="Sequence_12">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Throw Exception="[New SystemException(&quot;dataflex application is not open on the machine &quot;+Environment.MachineName+&quot;. Please open the application and keep the window maximized on the 'Enter Invoice Payment Page'.&quot;)]" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </Sequence>
          </If.Else>
        </If>
      </TryCatch.Finally>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="436.8,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[InvoiceNumbers.Length.ToString()+ &quot; Invoice numbers present...&quot;]" />
  </Sequence>
</Activity>